# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI @w Mave, CD @w easingthemes/ssh-deploy@main, and restarting the server with appleboy/ssh-action@master

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    #checkout the repository files for the runner
    - uses: actions/checkout@v4

    #get maven to build the project
    # - name: Set up JDK 21
    #   uses: actions/setup-java@v4
    #   with:
    #     java-version: '21'
    #     distribution: 'oracle'
    #     cache: maven
    # - name: Build with Maven
    #   run: mvn clean package

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - name: Update dependency graph
    #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    # - name: Deploy to ec2 server
    #   uses: easingthemes/ssh-deploy@main
    #   env:
    #     SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
    #     SOURCE: ${{ github.workspace }}
    #     REMOTE_HOST: ${{ secrets.HOST_DNS }}
    #     REMOTE_USER: ${{ secrets.USERNAME }}
    #     REMOTE_PORT: 22
    #     TARGET: '/home/ubuntu/sbhw/'

    - name: Change directory permissions
      run: sudo chmod -R 755 /srv/hello_world/
      
    - name: Sync files to ec2 
      env:
        dest: '${{ secrets.USERNAME }}@${{ secrets.PUBLIC_IP }}:/srv/hello_world/'
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" >> deploy_key
        chmod 600 ./deploy_key
        rsync -charlvzi --delete \
          -e 'ssh -i ./deploy_key -p 22 -o StrictHostKeyChecking=no' \
          --exclude '/deploy_key' \
          --exclude '/.*/' \
          --exclude '.*' \
          --exclude '/cgi-bin/' \
          --exclude 'README.md' \
          ./ ${{env.dest}}

    # - name: Executing remote ssh commands using ssh key
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: ${{ secrets.HOST_DNS }}
    #     username: ${{ secrets.USERNAME }}
    #     key: ${{ secrets.EC2_SSH_KEY }}
    #     script: |
    #       cd ~/YOUR/TARGET/DIR
    #       yarn/npm install
